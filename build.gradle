plugins {
  id 'com.bmuschko.docker-spring-boot-application' version '9.1.0'
  id 'org.springframework.boot' version '2.7.6'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'application'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

repositories {
  mavenCentral()
}

configurations {
  compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
  // BOM: https://repo1.maven.org/maven2/org/springframework/boot/spring-boot-dependencies/2.7.6/spring-boot-dependencies-2.7.6.pom
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-jetty'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

  // logback dependencies
  implementation 'org.codehaus.janino:janino'
  implementation 'org.codehaus.janino:commons-compiler'
  implementation 'io.vavr:vavr:0.10.4'

  // enable if required
  // implementation 'org.springframework.boot:spring-boot-starter-security'

  implementation 'org.postgresql:postgresql'
  implementation 'com.vladmihalcea:hibernate-types-52:2.21.1'
  implementation 'net.logstash.logback:logstash-logback-encoder:7.2'

  implementation 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'

  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
}

docker {
  springBootApplication {
    baseImage = 'splitwise'
    maintainer = 'Logesh'
    ports = [9090]
  }
}

application {
  mainClass = 'com.splitwise.App'
}

test {
  useJUnitPlatform()
}
